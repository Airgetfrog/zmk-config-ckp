#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define RAISE   1
#define CONFIG   2

#define RGB0 RGB_COLOR_HSB_VAL(280,100,50)
#define RGB1 RGB_COLOR_HSB_VAL(170,100,50)
#define RGB2 RGB_COLOR_HSB_VAL(0,100,50)

/ {
    behaviors {
        // tui: tap_unless_interrupted {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "tap_unless_interrupted";
        //     #binding-cells = <2>;
        //     flavor = "tap-unless-interrupted";
        //     tapping-term-ms = <500>;
        //     quick-tap-ms = <200>;
        //     bindings = <&kp>, <&kp>;
        // };

        lt_rgb: layer_tap_rgb {
            compatible = "zmk,behavior-hold-tap";
            label = "layer_tap_rgb";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&r_rgb>, <&kp>;
        };

        bettergresc: better_grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "better_grave_escape";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LCTL|MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        r_rgb: raise_RGB {
            label = "raise_RGB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to RAISE>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB_CMD RGB1>
                , <&macro_pause_for_release>
                , <&macro_tap &to DEFAULT>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB_CMD RGB0>;
        };

        c_rgb: config_RGB {
            label = "config_RGB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &to CONFIG>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB_CMD RGB2>
                , <&macro_pause_for_release>
                , <&macro_tap &to DEFAULT>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB_CMD RGB0>;
        };

        // to_rgb: to_RGB {
        //     label = "to_RGB";
        //     compatible = "zmk,behavior-macro-two-param";
        //     #binding-cells = <2>;
        //     bindings
        //         = <&macro_param_1to1>
        //         , <&macro_tap &to MACRO_PLACEHOLDER>
        //         , <&macro_param_2to2>
        //         , <&macro_tap &rgb_ug RGB_COLOR_HSB_CMD MACRO_PLACEHOLDER>;
        // };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
                // ------------------------------------------------------------------------------------------
                // |  `  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP
                // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   |
                // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER
                // |  SHIFT    |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | /   |      SHIFT
                // |  CTL  |  WIN  |  ALT  |            SPACE               | ALT | 1    |  MENU    |  CTRL
                // ------------------------------------------------------------------------------------------
            bindings = <
                &bettergresc &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp  N8   &kp  N9 &kp  N0  &kp MINUS &kp EQUAL &kp BSPC
                &kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp  I    &kp  O  &kp  P   &kp LBKT &kp RBKT   &kp BSLH
                &lt_rgb 0 CAPS  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp  K    &kp  L  &kp SEMI &kp SQT            &kp RET
                &kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &mt RSHFT FSLH                   &kp UP
                &kp LCTRL &kp LGUI &kp LALT            &kp SPACE                          &c_rgb  &kp LEFT &kp DOWN    &kp RIGHT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        raise {
            bindings = <
                &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
                &trans &trans &trans &trans &trans &trans &trans &trans &kp INS &trans &kp PSCRN &kp SLCK &kp PAUSE_BREAK &trans
                &trans    &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans  &trans   &trans
                &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &trans &trans &trans &trans &trans &trans &trans  &kp PG_UP
                &trans &kp R  &trans              &trans                            &c_rgb   &kp HOME   &kp PG_DN &kp END
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        config {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &bt BT_CLR
                &rgb_ug RGB_TOG &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_EFF &trans &trans &trans &trans &trans &trans &trans &sys_reset
                &bl BL_TOG    &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFR &trans &trans &trans &trans &trans  &trans   &bootloader
                &bt BT_PRV &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans  &bt BT_NXT
                &trans &kp C  &trans              &trans                            &c_rgb   &trans   &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
